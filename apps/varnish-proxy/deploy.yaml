apiVersion: apps/v1
kind: Deployment
metadata:
  name: varnish-proxy
  namespace: default
  labels:
    app: varnish-proxy
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: varnish-proxy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: varnish-proxy
      labels:
        app: varnish-proxy
    spec:
      containers:
        - name: varnish
          image: million12/varnish 
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: VCL_CONFIG
              value: /etc/varnish/default.vcl
          volumeMounts:
            - name: varnish-config
              mountPath: /etc/varnish/
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 80
          resources: # typical usage cpu: 0.002 with spikes to 0.0035, mem: 260MiB but grows when more pages are visited on the website #TODO: gather more data
            limits:
              cpu: 6m
              memory: 1024Mi
            requests:
              cpu: 3m
              memory: 512Mi
      volumes:
        - name: varnish-config
          configMap:
            name: varnish-vcl
            items:
              - key: default.vcl
                path: default.vcl
---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  namespace: default
  name: varnish-proxy
spec:
  default:
    checkIntervalSec: 60
    timeoutSec: 30
    config:
      type: HTTP
      httpHealthCheck:
        port: 80
        requestPath: /healthcheck
    logConfig:
      enabled: true
  targetRef:
    group: ""
    kind: Service
    name: varnish-svc