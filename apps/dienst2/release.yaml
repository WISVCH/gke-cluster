apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: dienst2
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: ./dienst2
      version: "0.1.x"
      interval: 5m
      reconcileStrategy: Revision
      sourceRef:
        kind: GitRepository
        name: wisvch
        namespace: flux-system
  values:
    replicaCount: 1
    domain: dienst2.ch.tudelft.nl
    serviceAccountSecretName: dienst2-service-account
    serviceAccountSecretKey: service_account
    allowedHosts: "dienst2.ch.tudelft.nl,dienst2.default.svc.cluster.local,dienst2.wisvch.internal"
    image:
      repository: ghcr.io/wisvch/dienst2
      tag: 20250905-aa284f9 # {"$imagepolicy": "flux-system:dienst2:tag"}
    postgres:
      database: dienst2
      host: 127.0.0.1
      port: 5432
      cloudSQL: true
  valuesFrom:
    - kind: Secret
      name: dienst2
      valuesKey: pg-username
      targetPath: postgres.username
    - kind: Secret
      name: dienst2
      valuesKey: pg-password
      targetPath: postgres.password
    - kind: Secret
      name: dienst2
      valuesKey: secret_key
      targetPath: secret_key
    - kind: Secret
      name: dienst2
      valuesKey: iap_expected_audience
      targetPath: iap.expected_audience
---
# https://cloud.google.com/kubernetes-engine/docs/how-to/configure-gateway-resources#configure_iap
apiVersion: networking.gke.io/v1
kind: GCPBackendPolicy
metadata:
  name: dienst2-backend-policy
  namespace: default
spec:
  default:
    iap:
      enabled: true
      oauth2ClientSecret:
        name: iap-secret
      clientID: 966138216790-us6sue108a879v3vk2om9inn3ftpobkg.apps.googleusercontent.com
  targetRef:
    group: ""
    kind: Service
    name: dienst2
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: dienst2-route
  namespace: default
spec:
  parentRefs:
    - kind: Gateway
      namespace: gateway-infra
      name: gateway
  hostnames:
    - dienst2.ch.tudelft.nl
  rules:
    - backendRefs:
        - name: dienst2
          port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: dienst2
  namespace: default
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8000
  selector:
    run: dienst2
  type: ClusterIP
---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  namespace: default
  name: dienst2
spec:
  default:
    config:
      type: HTTP
      httpHealthCheck:
        port: 8000
        host: dienst2.ch.tudelft.nl
        requestPath: /healthz
    logConfig:
      enabled: true
  targetRef:
    group: ""
    kind: Service
    name: dienst2
